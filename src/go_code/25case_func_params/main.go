package main
// 函数传值方式
// 值传递、引用传递
// 所有函数的参数都不是直接传递，而是拷贝出新的一个.
// 可分为 值拷贝、地址拷贝
// 因为拷贝的地址而不是值，地址拷贝效率高，值拷贝在数据量大的情况下，效率低.

// 值类型
// int、float、float、bool、string、数组array、结构体struct
// 默认 值传递,变量直接存储值，内存在栈中分配.
// ps: 如果想通过直接改变值类型的值， 可以效仿引用类型的特点，传递值 地址(&)，函数内部使用指针直接操作变量.

// 引用类型
// 指针、slice切片、map、chan管道、interface接口
// 默认 引用传递,变量存储地址，该地址指向的空间才是真正存储值的地方,在 堆中分配.
// ps: 当没有 任何变量引用这地址时，该地址对应的数据空间会被回收，垃圾回收机制GC.


